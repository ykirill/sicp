#lang racket

(define
  (squares a)
  (* a a)
)

(define
  (sum-of-squares a b)
  (+ (squares a) (squares b))
)

(define
  (func a b c)
    (cond
      ((and (> a c) (> b c)) (sum-of-squares a b))
      ((and (> a b) (> c b)) (sum-of-squares a c))
      (else (sum-of-squares b c))
    )
)


(func 3 1 2)
(func 3 4 2)
(func 1 2 2)
